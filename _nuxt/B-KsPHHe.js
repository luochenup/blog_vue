import{_ as k}from"./xFg6T9EQ.js";import{k as K,B as O,r as y,h as N}from"./raXDgERY.js";import{t as T,g as R}from"./Dj2IyaG6.js";import{u as m,q as h}from"./CS7__6sN.js";import{t as $}from"./fHJKm3TX.js";import{C as j,j as b,c as x,D,R as F,U as f,_ as P,aa as _,F as C,$ as q,a0 as z,L as A,a9 as E}from"./Dkj_qHQx.js";const V={class:"stats-horizontal"},Z=["title"],M={class:"stats-label"},U={class:"stats-value"},Y=j({__name:"BlogStats",setup(G){const l=K(),I=O(),v=$(I.public.buildTime,l.timezone),g=b(l.stats.wordCount),i=b(""),L=x(()=>[{label:"运营时长",value:T(l.timeEstablished),tip:`博客于${l.timeEstablished}上线`},{label:"上次更新",value:T(v),tip:`构建于${R(v)}`},{label:"总字数",value:g,tip:i.value}]);async function W(){try{const t=[],[d,n,a,r]=await Promise.all([m("blog-stats-posts",()=>h("content").where("stem","LIKE","posts/%").select("readingTime","date","path","title").all()),m("blog-stats-essays",()=>h("content").where("stem","LIKE","essays/%").select("readingTime","date","path","title").all()),m("blog-stats-novels",()=>h("content").where("stem","LIKE","novel/%").select("readingTime","date","path","title").all()),m("blog-stats-other-pages",()=>h("content").where("stem","NOT LIKE","posts/%").where("stem","NOT LIKE","essays/%").where("stem","NOT LIKE","novel/%").where("stem","NOT LIKE","previews/%").select("readingTime","date","path","title").all())]);await Promise.all([d.refresh(),n.refresh(),a.refresh(),r.refresh()]),d.data.value&&t.push(...d.data.value.map(e=>({...e,type:"post"}))),n.data.value&&t.push(...n.data.value.map(e=>({...e,type:"essay"}))),a.data.value&&t.push(...a.data.value.map(e=>({...e,type:"novel"}))),r.data.value&&t.push(...r.data.value.map(e=>({...e,type:"other"})));let w=0;const o={},c={};let B=0,S=0;for(const e of t)if(e.readingTime&&typeof e.readingTime.words=="number"&&e.readingTime.words>0){const s=e.readingTime.words;w+=s,B++;const p=e.type||"unknown";if(c[p]||(c[p]={count:0,words:0}),c[p].count++,c[p].words+=s,e.date){const u=new Date(e.date).getFullYear();o[u]||(o[u]={posts:0,words:0}),o[u].posts++,o[u].words+=s}}else S++,console.log("⚠️ 内容缺少有效的 readingTime.words:",{path:e.path,type:e.type,readingTime:e.readingTime,hasWords:!!e.readingTime?.words,wordsValue:e.readingTime?.words});g.value=y(w),Object.keys(o).length>0?i.value=Object.entries(o).sort(([e],[s])=>parseInt(s)-parseInt(e)).map(([e,s])=>`${e}年：${s.posts}篇，${y(s.words)}字`).join(`
`):i.value="暂无年度统计信息"}catch(t){console.error("字数统计失败:",t),g.value=l.stats.wordCount,i.value="统计信息暂时不可用"}}return D(async()=>{await W()}),(t,d)=>{const n=k;return f(),F(n,{card:"",title:"博客统计"},{default:P(()=>[_("div",V,[(f(!0),C(q,null,z(A(L),(a,r)=>(f(),C("div",{key:r,class:"stats-item",title:a.tip},[_("div",M,E(a.label),1),_("div",U,E(a.value),1)],8,Z))),128))])]),_:1})}}}),se=Object.assign(N(Y,[["__scopeId","data-v-64947cc5"]]),{__name:"WidgetBlogStats"});export{se as default};
